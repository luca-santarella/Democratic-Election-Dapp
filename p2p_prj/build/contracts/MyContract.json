{
  "contractName": "MyContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "click",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pressClick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"click\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"pressClick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/luca/p2p_proj/contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/luca/p2p_proj/contracts/MyContract.sol\":{\"keccak256\":\"0x387b942938d0b1b584d50f644b575b2a91936871bc3b67f3c2a7302beeebd77f\",\"urls\":[\"bzz-raw://6dbfc9002815a7df20d872f186dc984f787e2ddf9d4e3da2565a50789804fd9b\",\"dweb:/ipfs/QmQiD3hHTSx7Yx1wvy1YJgJRCPCzMLVmSjxx3iBe2NhQZx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50602a60008190555060f3806100276000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80633fa4f245146037578063fcd85cf0146051575b600080fd5b603d6059565b60405160489190609a565b60405180910390f35b6057605f565b005b60005481565b7f7d55923d6614dd1bb0e0f31c0d68411fadec9357b52118ad41a43144861669e260405160405180910390a1565b60948160b3565b82525050565b600060208201905060ad6000830184608d565b92915050565b600081905091905056fea2646970667358221220b4aed39cf1f0b7e25b211efbf40e36a2acb9a70ee21a2c256bd3ec81ab13f8d164736f6c63430008010033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c80633fa4f245146037578063fcd85cf0146051575b600080fd5b603d6059565b60405160489190609a565b60405180910390f35b6057605f565b005b60005481565b7f7d55923d6614dd1bb0e0f31c0d68411fadec9357b52118ad41a43144861669e260405160405180910390a1565b60948160b3565b82525050565b600060208201905060ad6000830184608d565b92915050565b600081905091905056fea2646970667358221220b4aed39cf1f0b7e25b211efbf40e36a2acb9a70ee21a2c256bd3ec81ab13f8d164736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:439:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:7",
                "type": ""
              }
            ],
            "src": "7:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "229:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "239:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "251:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "262:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "247:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "239:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "319:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "343:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "275:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "275:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "201:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "213:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "224:4:7",
                "type": ""
              }
            ],
            "src": "131:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "404:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "414:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "425:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "414:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "386:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "396:7:7",
                "type": ""
              }
            ],
            "src": "359:77:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "24:153:0:-:0;;;84:39;;;;;;;;;;117:2;109:5;:10;;;;24:153;;;;;;",
  "deployedSourceMap": "24:153:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;126:49;;;:::i;:::-;;47:17;;;;:::o;126:49::-;164:7;;;;;;;;;;126:49::o;7:118:7:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:77::-;;425:5;414:16;;404:32;;;:::o",
  "source": "pragma solidity 0.8.1;\n\ncontract MyContract {\n\tuint public value;\n\tevent click();\n\n\tconstructor() public {\n\t\tvalue = 42;\n\t}\n\n\tfunction pressClick() public {\n\t\temit click();\n\t}\n}\n",
  "sourcePath": "/home/luca/p2p_proj/contracts/MyContract.sol",
  "ast": {
    "absolutePath": "/home/luca/p2p_proj/contracts/MyContract.sol",
    "exportedSymbols": {
      "MyContract": [
        21
      ]
    },
    "id": 22,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "47:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "47:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 5,
            "name": "click",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "78:2:0"
            },
            "src": "67:14:0"
          },
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "105:18:0",
              "statements": [
                {
                  "expression": {
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "109:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3432",
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "117:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42_by_1",
                        "typeString": "int_const 42"
                      },
                      "value": "42"
                    },
                    "src": "109:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "109:10:0"
                }
              ]
            },
            "id": 13,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "95:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "105:0:0"
            },
            "scope": 21,
            "src": "84:39:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "155:20:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16,
                      "name": "click",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "164:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "164:7:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18,
                  "nodeType": "EmitStatement",
                  "src": "159:12:0"
                }
              ]
            },
            "functionSelector": "fcd85cf0",
            "id": 20,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pressClick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "145:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:0:0"
            },
            "scope": 21,
            "src": "126:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 22,
        "src": "24:153:0"
      }
    ],
    "src": "0:178:0"
  },
  "legacyAST": {
    "absolutePath": "/home/luca/p2p_proj/contracts/MyContract.sol",
    "exportedSymbols": {
      "MyContract": [
        21
      ]
    },
    "id": 22,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "47:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "47:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 5,
            "name": "click",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "78:2:0"
            },
            "src": "67:14:0"
          },
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "105:18:0",
              "statements": [
                {
                  "expression": {
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "109:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3432",
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "117:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42_by_1",
                        "typeString": "int_const 42"
                      },
                      "value": "42"
                    },
                    "src": "109:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "109:10:0"
                }
              ]
            },
            "id": 13,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "95:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "105:0:0"
            },
            "scope": 21,
            "src": "84:39:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "155:20:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16,
                      "name": "click",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "164:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "164:7:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18,
                  "nodeType": "EmitStatement",
                  "src": "159:12:0"
                }
              ]
            },
            "functionSelector": "fcd85cf0",
            "id": 20,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pressClick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "145:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:0:0"
            },
            "scope": 21,
            "src": "126:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 22,
        "src": "24:153:0"
      }
    ],
    "src": "0:178:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "1623714027307": {
      "events": {},
      "links": {},
      "address": "0x1AC38782F54649c5f9d1AE7691bC2a6b0aA017C0",
      "transactionHash": "0x84d376aa68a4643907894cf7cc9da08b52fb8087632c4da9cb0389103f133789"
    },
    "1623718113902": {
      "events": {},
      "links": {},
      "address": "0x80544C0AA268cFa14A224ecDb430fF555b8e0C74",
      "transactionHash": "0x4b4860afaeb7a7b06380de4faf8f7e1dea554e7be267d0a1fa413abbb40c382f"
    },
    "1623848144668": {
      "events": {},
      "links": {},
      "address": "0x255fCeE2Cd0262926dD65D9d7B454C05F841ce34",
      "transactionHash": "0x7939ccc316cf44f173ffaa1d160d17d97f227be0212c90552a8ed10a0feac26c"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-16T13:43:04.516Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}